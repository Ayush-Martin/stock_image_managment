name: CI CD

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ayushmartin/stock_image_management:latest

jobs:
  # ---- client ----
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Write client env
        run: echo "${{ secrets.client_ENV }}" > client/.env

      - name: install dependencies
        run: npm install
        working-directory: client

      - name: build
        run: npm run build
        working-directory: client

  deploy-client:
    needs: build-client
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: install vercel
        run: npm install -g vercel

      - name: Deploy to Vercel
        working-directory: client
        run: vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }} --name team-management

  # ---- server ----
  build-server:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Write env for build
        run: |
          echo "${{ secrets.server_ENV }}" > server/.env

      - name: install dependencies
        run: npm install
        working-directory: server

      - name: build
        run: npm run build
        working-directory: server

  push-server-to-docker-hub:
    needs: build-server
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build docker image
        run: docker build -t $IMAGE_NAME ./server

      - name: push docker image to docker hub
        run: docker push $IMAGE_NAME

  deploy-server:
    needs: push-server-to-docker-hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Write .env file from GitHub Secrets
        run: echo "${{ secrets.server_ENV }}" > .env

      - name: Copy deployment files to EXC
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "server/docker-compose.yaml,server/.env,server/deploy.sh"
          target: "~/team-management"

      - name: Run deploy.sh on EXC
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            ls
            cd ~/team-management/server
            ls
            chmod +x deploy.sh
            ./deploy.sh
